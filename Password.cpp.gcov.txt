        -:    0:Source:Password.cpp
        -:    0:Graph:Password.gcno
        -:    0:Data:Password.gcda
        -:    0:Runs:1
        -:    1:#include "Password.h"
        -:    2:#include <string>
        -:    3:
        -:    4:using std::string;
        -:    5:
        -:    6:/*
        -:    7:  The function receives a string counts how many times the same character 
        -:    8:  occurs at the beginning of the string, before any other characters (or the
        -:    9:  end of the string). The function is case-sensitive so 'Z' is different than
        -:   10:  'z' and any ASCII characters are allowed.
        -:   11:*/
function _ZN8Password24count_leading_charactersENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 6 returned 100% blocks executed 100%
        6:   12:int Password::count_leading_characters(string phrase){
        6:   13:  int repetition = 1;
        6:   14:  int index = 0;
        8:   15:  while( index < phrase.length()-1 && phrase[index] == phrase[index+1] ){
call    0 returned 8
branch  1 taken 7 (fallthrough)
branch  2 taken 1
call    3 returned 7
call    4 returned 7
branch  5 taken 2 (fallthrough)
branch  6 taken 5
branch  7 taken 2
branch  8 taken 6 (fallthrough)
        2:   16:    repetition++;
        2:   17:    index++;
        -:   18:  }
        6:   19:  return repetition;
        -:   20:}
        -:   21:
        -:   22:// int Password::count_leading_characters(string phrase){
        -:   23://   if(phrase.length() < 1){
        -:   24://     return 0;
        -:   25://   }
        -:   26://   int count = 0;
        -:   27://   char start = phrase[0];
        -:   28://   for(int i = 0; i < phrase.length(); i++){
        -:   29://     if(phrase[i] != start){
        -:   30://       return count;
        -:   31://     }
        -:   32://     count++;
        -:   33://   }
        -:   34://   return count;
        -:   35:// }
        -:   36:
        -:   37:
        -:   38:
        -:   39:/*
        -:   40:  receives a string and returns whether it has both at least one upper-case
        -:   41:  letter and at least one lower-case letter
        -:   42:*/
function _ZN8Password14has_mixed_caseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   43:bool Password::has_mixed_case(string pass){
    #####:   44:  return false;
        -:   45:}
